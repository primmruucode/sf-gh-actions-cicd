name: Deploy to Sandbox Dev

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v2
        with:
            node-version: '14'
            
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-cli/channels/stable/sfdx-cli-linux-x64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-cli-linux-x64.tar.xz -C sfdx-cli --strip-components 1
          sudo ./sfdx-cli/install
# sfdx force:source:deploy --manifest=manifest/package.xml --testlevel=RunLocalTests -u kourim2570-v2az@force.com
    #  - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
     #   shell: bash
      #  run: |
       #     echo ${{ secrets.SFDX_DEVHUB_URL}} > ./SFDX_DEVHUB_URL.txt
      
            # Authenticate to org
      #- name: 'Authenticate to Integration Org'
       # run: sfdx auth:sfdxurl:store -f ./SFDX_DEVHUB_URL.txt -s -a DevHub

            

      - name: echo key
        run: echo "${{ secrets.SALESFORCE_SERVER_KEY }}" > server.key
        
      - name: Authenticate with Salesforce
        run: | 
          sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_USERNAME }} --setdefaultdevhubusername --setalias devjwt
          

       
# force:source:deploy,--manifest,manifest/package.xml,--targetusername,DevHub_Instance,--wait,30,--json,--ignorewarnings,--testlevel,RunLocalTests
      - name: Deploy to Sandbox
        run: |
          sfdx force:source:deploy -x manifest/package.xml --json --testlevel RunLocalTests --ignorewarnings -u ${{ secrets.SALESFORCE_USERNAME }} 
    

            # Trigger packaging workflow if needed
     # - name: 'Trigger packaging workflow if needed'
      #  uses: peter-evans/repository-dispatch@v2
       # with:
        #    event-type: start-packaging
         #   client-payload: '{ "ref": "${{ github.ref }}", "sha": "${{ github.sha }}" }'
