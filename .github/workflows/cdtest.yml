name: Deploy to Sandbox

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v2
        with:
            node-version: '14'
            
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Install Volta to enforce proper node and package manager versions
      - name: 'Install Volta'
        uses: volta-cli/action@v4

      # Cache node_modules to speed up the process
      - name: 'Restore node_modules cache'
        id: cache-npm
        uses: actions/cache@v3
        with:
            path: node_modules
            key: npm-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                npm-${{ env.cache-name }}-
                npm-

      # Install npm dependencies for Prettier and Jest
      - name: 'Install npm dependencies'
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: HUSKY=0 npm ci

      # Prettier formatting
      - name: 'Code formatting verification with Prettier'
        run: npm run prettier:verify

      # Lint LWC / Aura
      - name: 'Lint Lightning Web Components / Aura Components'
        run: npm run lint

      # LWC unit tests
      - name: 'Unit test Lightning Web Components'
        run: npm run test:unit:coverage

      # Upload code coverage data
      - name: 'Upload code coverage for LWC to Codecov.io'
        uses: codecov/codecov-action@v3
        with:
            flags: LWC

      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-cli/channels/stable/sfdx-cli-linux-x64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-cli-linux-x64.tar.xz -C sfdx-cli --strip-components 1
          sudo ./sfdx-cli/install
# sfdx force:source:deploy --manifest=manifest/package.xml --testlevel=RunLocalTests -u kourim2570-v2az@force.com
      - name: echo key
        run: echo "${{ secrets.SALESFORCE_SERVER_KEY }}" > server.key
        
      - name: Authenticate with Salesforce
        run: | 
          sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_USERNAME }} --setdefaultdevhubusername --setalias devjwt
          

       
# force:source:deploy,--manifest,manifest/package.xml,--targetusername,DevHub_Instance,--wait,30,--json,--ignorewarnings,--testlevel,RunLocalTests
      - name: Deploy to Sandbox
        run: |
          sfdx force:source:deploy -x manifest/package.xml --json --testlevel RunLocalTests --ignorewarnings -u ${{ secrets.SALESFORCE_USERNAME }}
